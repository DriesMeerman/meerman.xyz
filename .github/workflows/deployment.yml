name: Build and publish

on:
  workflow_dispatch:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build-website:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4

      - name: Npm install
        run: npm ci

      - name: Build website
        run: npm run build

      - uses: actions/upload-artifact@v3
        with:
          name: meerman-xyz-website
          path: static/

  publish-container:
    runs-on: ubuntu-latest
    needs: build-website
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Login to docker registry
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_TOKEN: ${{secrets.DOCKER_TOKEN}}
        run: docker login -u $DOCKER_USER -p $DOCKER_TOKEN

      - name: debug pre downloadartifact
        run: ls -r

      - uses: actions/download-artifact@v3
        with:
          name: meerman-xyz-website
          path: dist

      - name: Debug downloadartifact
        run: ls -r

      - name: Build the Docker image
        run: docker build --file Dockerfile.artifact --tag meerman.xyz:latest .

      - name: Tag docker image
        run: docker tag meerman.xyz:latest ${{secrets.DOCKER_USER}}/meerman.xyz:latest

      - name: Publish the docker image
        run: docker push ${{secrets.DOCKER_USER}}/meerman.xyz:latest

  deploy:
    runs-on: ubuntu-latest
    needs: publish-container
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            containerName="meerman.xyz"
            docker pull chrozera/meerman.xyz:latest
            containerId=$(docker ps -a -q --filter="name=$containerName")
            if [ -z "$containerId" ]
            then
            echo "No container running"
            else
            echo "Stopping container and removing old image"
            docker rm $(docker stop $containerId)
            fi
            echo "Starting container"
            docker run --name $containerName -d -p 4337:80 chrozera/meerman.xyz
